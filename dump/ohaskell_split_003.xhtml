<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru-RU">
  <!-- This file was converted to xhtml by Writer2xhtml ver. 1.0.2. See http://writer2latex.sourceforge.net for more info. -->
  <head>
    <title>Неизв.</title>
    <meta content="" name="description"/>
    <meta content="" name="keywords"/>
    <link href="http://purl.org/dc/elements/1.1/" rel="schema.DC"/>
    <meta content="" name="DC.title"/>
    <meta content="" name="DC.subject"/>
    <meta content="" name="DC.description"/>
    <meta content="" name="DC.creator"/>
    <meta content="2014-03-16T18:27:08" name="DC.date"/>
    <meta content="" name="DC.language"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link href="stylesheet.css" rel="stylesheet" type="text/css"/>
<link href="page_styles.css" rel="stylesheet" type="text/css"/>
</head>
  <body dir="ltr" class="calibre">
<h2 id="toc2" class="calibre8">Кто</h2>
    <p class="calibre13">«Я, барон Мюнхгаузен, обыкновенный человек…»</p>
    <p class="calibre14"> </p>
    <p class="calibre15">барон</p>
    <p class="calibre14"> </p>
    <p class="calibre16">Ая, подобно Мюнхгаузену, обыкновенный программист. Самый заурядный самоучка. Когда-то я считал программирование самым скучным видом человеческой деятельности. Последние семь лет я считаю его одним из наиболее интересных дел.</p>
    <p class="calibre16">Фредерик Брукс был прав, серебряной пули не существует. И всё же программисты-практики ищут новые инструменты для решения своих непростых задач. Вот и я, после 7 лет опыта программирования на C++, решил искать нечто новое, и именно ради стремления к большей эффективности.</p>
    <p class="calibre16">Признаюсь, я начал уставать от сложности C++. Захотелось мне чего-нибудь эдакого. Компилируемость, строгость к типам, высокоуровневые конструкции, красивый синтаксис, универсальность и… что-нибудь попроще. Да, я хотел именно этого. Под руку случайно подвернулся Haskell — и зацепил меня сразу.</p>
    <p class="calibre16">Во-первых, отсутствие оператора присваивания. Признаюсь, крышу мне снесло напрочь, и я решил разобраться.</p>
    <p class="calibre16">Во-вторых, красота. Я люблю красивый код, а, как выяснилось, код на Haskell может быть очень красивым.</p>
    <p class="calibre16">В-третьих, мощь. Продолжайте читать, и чуть позже вы сами в этом убедитесь.</p>
    <p class="calibre16">И наконец, простота. Нет, я не оговорился. Мне известно, что к функциональному программированию эпитет «<span class="calibre17">простое»</span> применяется чуть реже, чем никогда. В частности, в отношении Haskell бытует мнение о чрезвычайной, прямо-таки фантастической сложности его освоения. И всё же я повторю: в этом языке меня поразила его простота. И скоро вы поймёте, что я имею в виду.</p>
    </body>
</html>
